curr_CDD18_db2 = curr_CDD18_db^2)
# Check
global <- global[complete.cases(global$ln_ely_q), ]
global <- global[complete.cases(global$ac), ]
global <- global[complete.cases(global$ln_total_exp_usd_2011), ]
global <- global[complete.cases(global$mean_CDD18_db), ]
global <- global[complete.cases(global$urban), ]
global <- global[complete.cases(global$ownership_d), ]
global <- global[complete.cases(global$n_members), ]
global <- global[complete.cases(global$age_head), ]
global <- global[complete.cases(global$country), ]
global <- global[complete.cases(global$weight), ]
global <- global[complete.cases(global$sex_head), ]
global <- global[complete.cases(global$urban_sh), ]
global <- global[complete.cases(global$ln_ely_p), ]
global <- global[complete.cases(global$curr_CDD18_db), ]
global <- global[complete.cases(global$curr_HDD18_db), ]
global <- global[complete.cases(global$adm1), ]
global <- global %>% filter(ln_ely_q > 0)
global <- global %>% filter(weight > 0)
# Survey
global_svy <- svydesign(data = global, ids = ~ adm1, weights = ~ weight)
####################################################################
#                       ROBUSTNESS CHECKS
#       (1) Sub-national Fixed effects
#       (2) ADM1 Fixed effects
#       (3) CDD 24 and HDD 15
#       (4) Drop Electricity Prices
#       (5) Electricity Prices interact with Income Deciles
#       (6) Correction term squared
#       (7) Correction term interaction
#       (8) Correction term squared x interaction
#       (9) Electricity in Levels
#       (10) Unweighted Regressions
####################################################################
###########################################################################
#  (1) Subnational Fixed Effects (smallest ADM available in each survey)  #
###########################################################################
# AC formula for global
ac_formula <- as.numeric(as.character(ac)) ~ mean_CDD18_db + mean_CDD18_db2 +
mean_CDD18_db_exp + mean_CDD18_db2_exp + ln_total_exp_usd_2011 + curr_CDD18_db + curr_CDD18_db2 +
ln_ely_p + ln_ely_p_cdd + ln_ely_p_cdd2 + ln_ely_p_nme + ln_ely_p_own +
urban_sh + ownership_d +
n_members + edu_head_2 + age_head + sex_head | subnat
# Logistic regression
fs <- feglm(ac_formula, family = binomial(link = "logit"), data = global, weights = ~weight, cluster = c("adm1")); summary(fs)
# Save data set for which there are obs both in first and second stage
sec <- global[obs(fs),] # 52k observations lost
# Predicted probabilities
sec$phat0_obs <- as.numeric(predict(fs, type="response"))
# Find old HHs classified as owning an AC (NB: using ROC curve we have seen that we are GOOD at predicting those who have AC)
sec$ac_obs <- ifelse(sec$phat0_obs>0.5 & !is.na(sec$phat0_obs), 1 , 0)
# Selection term
sec$xb_noac = 1-sec$phat0_obs
sec$selection = ifelse(sec$ac==1,
(sec$xb_noac*log(sec$xb_noac)/sec$phat0_obs) + log(sec$phat0_obs),
(sec$phat0_obs*log(sec$phat0_obs)/sec$xb_noac) + log(sec$xb_noac))
# Formula electricity expenditure for electricity expenditure
ely_formula  <- ln_ely_q ~ ac +
curr_CDD18_db + I(curr_CDD18_db^2) + curr_HDD18_db + I(curr_HDD18_db^2) + ln_total_exp_usd_2011 + ln_ely_p +
urban_sh + ownership_d + n_members + edu_head_2 + age_head + sex_head + selection | subnat
# With selection
model0_sfe <- feols(ely_formula, data = sec, weights = ~weight, cluster = c("adm1")); summary(model0_sfe)
# Formula electricity expenditure for electricity expenditure
ely_formula  <- ln_ely_q ~ ac + ac*curr_CDD18_db + ac*I(curr_CDD18_db^2) +
curr_CDD18_db + I(curr_CDD18_db^2) + curr_HDD18_db + I(curr_HDD18_db^2) + ln_total_exp_usd_2011 + ln_ely_p +
urban_sh + ownership_d + n_members + edu_head_2 + age_head + sex_head + selection | subnat
# With selection
model_sfe <- feols(ely_formula, data = sec, weights = ~weight, cluster = c("adm1")); summary(model_sfe)
############################
#  (2) ADM1 Fixed Effects  #
############################
# AC formula for global
ac_formula <- as.numeric(as.character(ac)) ~ mean_CDD18_db + mean_CDD18_db2 +
mean_CDD18_db_exp + mean_CDD18_db2_exp + ln_total_exp_usd_2011 + curr_CDD18_db + curr_CDD18_db2 +
ln_ely_p + ln_ely_p_cdd + ln_ely_p_cdd2 + ln_ely_p_nme + ln_ely_p_own +
urban_sh + ownership_d +
n_members + edu_head_2 + age_head + sex_head | adm1
# Logistic regression
fs <- feglm(ac_formula, family = binomial(link = "logit"),
data = global, weights = ~weight, cluster = c("adm1")); summary(fs)
# Save data set for which there are obs both in first and second stage
sec <- global[obs(fs),] # 10k observations lost
# Predicted probabilities
sec$phat0_obs <- as.numeric(predict(fs, type="response"))
# Find old HHs classified as owning an AC (NB: using ROC curve we have seen that we are GOOD at predicting those who have AC)
sec$ac_obs <- ifelse(sec$phat0_obs>0.5 & !is.na(sec$phat0_obs), 1 , 0)
# Selection term
sec$xb_noac = 1-sec$phat0_obs
sec$selection = ifelse(sec$ac==1,
(sec$xb_noac*log(sec$xb_noac)/sec$phat0_obs) + log(sec$phat0_obs),
(sec$phat0_obs*log(sec$phat0_obs)/sec$xb_noac) + log(sec$xb_noac))
# Formula electricity expenditure for electricity expenditure
ely_formula  <- ln_ely_q ~ ac +
curr_CDD18_db + I(curr_CDD18_db^2) + curr_HDD18_db + I(curr_HDD18_db^2) + ln_total_exp_usd_2011 + ln_ely_p +
urban_sh + ownership_d + n_members + edu_head_2 + age_head + sex_head + selection | adm1
# With selection
model0_afe <- feols(ely_formula, data = sec, weights = ~weight,
cluster = c("adm1")); summary(model0_afe)
# Formula electricity expenditure for electricity expenditure
ely_formula  <- ln_ely_q ~ ac + ac*curr_CDD18_db + ac*I(curr_CDD18_db^2) +
curr_CDD18_db + I(curr_CDD18_db^2) + curr_HDD18_db + I(curr_HDD18_db^2) + ln_total_exp_usd_2011 + ln_ely_p +
urban_sh + ownership_d + n_members + edu_head_2 + age_head + sex_head + selection | adm1
# With selection
model_afe <- feols(ely_formula, data = sec, weights = ~weight,
cluster = c("adm1")); summary(model_afe)
###################################
#  (3) CDD 24 and HDD 15 degress  #
###################################
# Re-run data set
global_24 <- global
global_24 <- global_24 %>% mutate(mean_CDD18_db = meanpy_CDD_db,
curr_CDD18_db = curr_CDD_db,
curr_HDD18_db = curr_HDD_db)
# AC formula for global
ac_formula <- as.numeric(as.character(ac)) ~ mean_CDD18_db + I(mean_CDD18_db^2) + curr_CDD18_db + curr_CDD18_db2 +
mean_CDD18_db*ln_total_exp_usd_2011 + I(mean_CDD18_db^2)*ln_total_exp_usd_2011 + ln_total_exp_usd_2011 +
ln_ely_p + mean_CDD18_db*ln_ely_p + I(mean_CDD18_db^2)*ln_ely_p + n_members*ln_ely_p + ownership_d*ln_ely_p +
urban_sh + ownership_d +
n_members + edu_head_2 + age_head + sex_head | country
# Logistic regression
fs <- feglm(ac_formula, family = binomial(link = "logit"),
data = global_24, weights = ~weight, cluster = c("adm1")); summary(fs)
# Predicted probabilities
global_24$phat0_obs <- as.numeric(predict(fs, type="response"))
# Find old HHs classified as owning an AC (NB: using ROC curve we have seen that we are GOOD at predicting those who have AC)
global_24$ac_obs <- ifelse(global_24$phat0_obs>0.5 & !is.na(global_24$phat0_obs), 1 , 0)
# Selection term
global_24$xb_noac = 1-global_24$phat0_obs
global_24$selection = ifelse(global_24$ac==1,
(global_24$xb_noac*log(global_24$xb_noac)/global_24$phat0_obs) + log(global_24$phat0_obs),
(global_24$phat0_obs*log(global_24$phat0_obs)/global_24$xb_noac) + log(global_24$xb_noac))
# Formula electricity expenditure for electricity expenditure
ely_formula  <- ln_ely_q ~ ac +
curr_CDD_db + I(curr_CDD_db^2) + curr_HDD_db + I(curr_HDD_db^2) + ln_total_exp_usd_2011 + ln_ely_p +
urban_sh + ownership_d + n_members + edu_head_2 + age_head + sex_head + selection | country
# With selection
model0_24 <- feols(ely_formula, data = global_24, weights = ~weight, cluster = c("adm1")); summary(model0_24)
# Formula electricity expenditure for electricity expenditure
ely_formula  <- ln_ely_q ~ ac + ac*curr_CDD18_db + ac*I(curr_CDD18_db^2) +
curr_CDD18_db + I(curr_CDD18_db^2) + curr_HDD18_db + I(curr_HDD18_db^2) + ln_total_exp_usd_2011 + ln_ely_p +
urban_sh + ownership_d + n_members + edu_head_2 + age_head + sex_head + selection | country
# With selection
model_24 <- feols(ely_formula, data = global_24, weights = ~weight, cluster = c("adm1")); summary(model_24)
##########################################
#      (4) Drop electricity prices       #
##########################################
# Re-run data set
global_np <- global
# AC formula for global
ac_formula <- as.numeric(as.character(ac)) ~ mean_CDD_db + I(mean_CDD_db^2) + curr_CDD18_db + curr_CDD18_db2 +
mean_CDD_db*ln_total_exp_usd_2011 + I(mean_CDD_db^2)*ln_total_exp_usd_2011 + ln_total_exp_usd_2011 +
urban_sh + ownership_d +
n_members + edu_head_2 + age_head + sex_head + country
# Logistic regression
fs <- feglm(ac_formula, family = binomial(link = "logit"),
data = global_np, weights = ~weight, cluster = c("adm1")); summary(fs)
# Predicted probabilities
global_np$phat0_obs <- as.numeric(predict(fs, type="response"))
# Find old HHs classified as owning an AC (NB: using ROC curve we have seen that we are GOOD at predicting those who have AC)
global_np$ac_obs <- ifelse(global_np$phat0_obs>0.5 & !is.na(global_np$phat0_obs), 1 , 0)
# Selection term
global_np$xb_noac = 1-global_np$phat0_obs
global_np$selection = ifelse(global_np$ac==1,
(global_np$xb_noac*log(global_np$xb_noac)/global_np$phat0_obs) + log(global_np$phat0_obs),
(global_np$phat0_obs*log(global_np$phat0_obs)/global_np$xb_noac) + log(global_np$xb_noac))
# Formula electricity expenditure for electricity expenditure
ely_formula  <- ln_ely_q ~ ac +
curr_CDD18_db + I(curr_CDD18_db^2) + curr_HDD18_db + I(curr_HDD18_db^2) + ln_total_exp_usd_2011 +
urban_sh + ownership_d + n_members + edu_head_2 + age_head + sex_head + selection | country
# With selection
model0_np <- feols(ely_formula, data = global_np, weights = ~weight, cluster = c("adm1")); summary(model0_np)
# Formula electricity expenditure for electricity expenditure
ely_formula  <- ln_ely_q ~ ac + ac*curr_CDD18_db + ac*I(curr_CDD18_db^2) +
curr_CDD18_db + I(curr_CDD18_db^2) + curr_HDD18_db + I(curr_HDD18_db^2) + ln_total_exp_usd_2011 +
urban_sh + ownership_d + n_members + edu_head_2 + age_head + sex_head + selection | country
# With selection
model_np <- feols(ely_formula, data = global_np, weights = ~weight, cluster = c("adm1")); summary(model_np)
##################################################
# (5) Electricity prices interacted with deciles #
##################################################
# Decile of total expenditure
global <- global %>% mutate(total_exp_usd_2011 = exp(ln_total_exp_usd_2011))
setDT(global)[,dec_inc := cut(total_exp_usd_2011, breaks = quantile(total_exp_usd_2011, probs = seq(0, 1, 0.1)),
labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), include.lowest = TRUE)]
# AC formula for global
ac_formula <- as.numeric(as.character(ac)) ~ mean_CDD18_db + mean_CDD18_db2 +
mean_CDD18_db_exp + mean_CDD18_db2_exp + ln_total_exp_usd_2011 + curr_CDD18_db + curr_CDD18_db2 +
ln_ely_p + ln_ely_p_cdd + ln_ely_p_cdd2 + ln_ely_p_nme + ln_ely_p_own + ln_ely_p*dec_inc + dec_inc +
urban_sh + ownership_d +
n_members + edu_head_2 + age_head + sex_head | country
# Logistic regression
fs <- feglm(ac_formula, family = binomial(link = "logit"),
data = global, weights = ~weight, cluster = c("adm1")); summary(fs)
# Predicted probabilities
global$phat0_obs <- as.numeric(predict(fs, type="response"))
# Find old HHs classified as owning an AC (NB: using ROC curve we have seen that we are GOOD at predicting those who have AC)
global$ac_obs <- ifelse(global$phat0_obs>0.5 & !is.na(global$phat0_obs), 1 , 0)
# Selection term
global$xb_noac = 1-global$phat0_obs
global$selection = ifelse(global$ac==1,
(global$xb_noac*log(global$xb_noac)/global$phat0_obs) + log(global$phat0_obs),
(global$phat0_obs*log(global$phat0_obs)/global$xb_noac) + log(global$xb_noac))
# Formula electricity expenditure for electricity expenditure
ely_formula  <- ln_ely_q ~ ac +
curr_CDD18_db + I(curr_CDD18_db^2) + curr_HDD18_db + I(curr_HDD18_db^2) + ln_total_exp_usd_2011 + ln_ely_p*dec_inc +
urban_sh + ownership_d + n_members + edu_head_2 + age_head + sex_head + selection | country
# With selection
model0_dec <- feols(ely_formula, data = global, weights = ~weight, cluster = c("adm1")); summary(model0_dec)
# Formula electricity expenditure for electricity expenditure
ely_formula  <- ln_ely_q ~ ac + ac*curr_CDD18_db + ac*I(curr_CDD18_db^2) +
curr_CDD18_db + I(curr_CDD18_db^2) + curr_HDD18_db + I(curr_HDD18_db^2) + ln_total_exp_usd_2011 + ln_ely_p*dec_inc +
urban_sh + ownership_d + n_members + edu_head_2 + age_head + sex_head + selection | country
# With selection
model_dec <- feols(ely_formula, data = global, weights = ~weight, cluster = c("adm1")); summary(model_dec)
##################################
#  (6) Correction term squared  #
#################################
# AC formula for global
ac_formula <- as.numeric(as.character(ac)) ~ mean_CDD18_db + mean_CDD18_db2 +
mean_CDD18_db_exp + mean_CDD18_db2_exp + ln_total_exp_usd_2011 + curr_CDD18_db + curr_CDD18_db2 +
ln_ely_p + ln_ely_p_cdd + ln_ely_p_cdd2 + ln_ely_p_nme + ln_ely_p_own +
urban_sh + ownership_d +
n_members + edu_head_2 + age_head + sex_head | country
# Logistic regression
fs <- feglm(ac_formula, family = binomial(link = "logit"), data = global, weights = ~weight, cluster = c("adm1")); summary(fs)
# Save data set for which there are obs both in first and second stage
sec <- global[obs(fs),] # 52k observations lost
# Predicted probabilities
sec$phat0_obs <- as.numeric(predict(fs, type="response"))
# Find old HHs classified as owning an AC (NB: using ROC curve we have seen that we are GOOD at predicting those who have AC)
sec$ac_obs <- ifelse(sec$phat0_obs>0.5 & !is.na(sec$phat0_obs), 1 , 0)
# Selection term
sec$xb_noac = 1-sec$phat0_obs
sec$selection = ifelse(sec$ac==1,
(sec$xb_noac*log(sec$xb_noac)/sec$phat0_obs) + log(sec$phat0_obs),
(sec$phat0_obs*log(sec$phat0_obs)/sec$xb_noac) + log(sec$xb_noac))
# Squared
sec$selection_sq <- sec$selection*sec$selection
# Formula electricity expenditure for electricity expenditure
ely_formula  <- ln_ely_q ~ ac +
curr_CDD18_db + I(curr_CDD18_db^2) + curr_HDD18_db + I(curr_HDD18_db^2) + ln_total_exp_usd_2011 + ln_ely_p +
urban_sh + ownership_d + n_members + edu_head_2 + age_head + sex_head + selection + selection_sq | country
# With selection
model0_ct2 <- feols(ely_formula, data = sec, weights = ~weight, cluster = c("adm1")); summary(model0_ct2)
# Formula electricity expenditure for electricity expenditure
ely_formula  <- ln_ely_q ~ ac + ac*curr_CDD18_db + ac*I(curr_CDD18_db^2) +
curr_CDD18_db + I(curr_CDD18_db^2) + curr_HDD18_db + I(curr_HDD18_db^2) + ln_total_exp_usd_2011 + ln_ely_p +
urban_sh + ownership_d + n_members + edu_head_2 + age_head + sex_head + selection + selection_sq | country
# With selection
model_ct2 <- feols(ely_formula, data = sec, weights = ~weight, cluster = c("adm1")); summary(model_ct2)
#####################################
#  (7) Correction term interaction  #
#####################################
# AC formula for global
ac_formula <- as.numeric(as.character(ac)) ~ mean_CDD18_db + mean_CDD18_db2 +
mean_CDD18_db_exp + mean_CDD18_db2_exp + ln_total_exp_usd_2011 + curr_CDD18_db + curr_CDD18_db2 +
ln_ely_p + ln_ely_p_cdd + ln_ely_p_cdd2 + ln_ely_p_nme + ln_ely_p_own +
urban_sh + ownership_d +
n_members + edu_head_2 + age_head + sex_head | country
# Logistic regression
fs <- feglm(ac_formula, family = binomial(link = "logit"), data = global, weights = ~weight, cluster = c("adm1")); summary(fs)
# Save data set for which there are obs both in first and second stage
sec <- global[obs(fs),] # 52k observations lost
# Predicted probabilities
sec$phat0_obs <- as.numeric(predict(fs, type="response"))
# Find old HHs classified as owning an AC (NB: using ROC curve we have seen that we are GOOD at predicting those who have AC)
sec$ac_obs <- ifelse(sec$phat0_obs>0.5 & !is.na(sec$phat0_obs), 1 , 0)
# Selection term
sec$xb_noac = 1-sec$phat0_obs
sec$selection = ifelse(sec$ac==1,
(sec$xb_noac*log(sec$xb_noac)/sec$phat0_obs) + log(sec$phat0_obs),
(sec$phat0_obs*log(sec$phat0_obs)/sec$xb_noac) + log(sec$xb_noac))
# Linear Interaction
sec$selection_int <- sec$curr_CDD18_db*sec$selection
# Formula electricity expenditure for electricity expenditure
ely_formula  <- ln_ely_q ~ ac +
curr_CDD18_db + I(curr_CDD18_db^2) + curr_HDD18_db + I(curr_HDD18_db^2) + ln_total_exp_usd_2011 + ln_ely_p +
urban_sh + ownership_d + n_members + edu_head_2 + age_head + sex_head + selection + selection_int | country
# With selection
model0_ctint <- feols(ely_formula, data = sec, weights = ~weight, cluster = c("adm1")); summary(model0_ctint)
# Formula electricity expenditure for electricity expenditure
ely_formula  <- ln_ely_q ~ ac + ac*curr_CDD18_db + ac*I(curr_CDD18_db^2) +
curr_CDD18_db + I(curr_CDD18_db^2) + curr_HDD18_db + I(curr_HDD18_db^2) + ln_total_exp_usd_2011 + ln_ely_p +
urban_sh + ownership_d + n_members + edu_head_2 + age_head + sex_head + selection + selection_int | country
# With selection
model_ctint <- feols(ely_formula, data = sec, weights = ~weight, cluster = c("adm1")); summary(model_ctint)
#################################################
#  (8) Correction term interaction and squared  #
#################################################
# AC formula for global
ac_formula <- as.numeric(as.character(ac)) ~ mean_CDD18_db + mean_CDD18_db2 +
mean_CDD18_db_exp + mean_CDD18_db2_exp + ln_total_exp_usd_2011 + curr_CDD18_db + curr_CDD18_db2 +
ln_ely_p + ln_ely_p_cdd + ln_ely_p_cdd2 + ln_ely_p_nme + ln_ely_p_own +
urban_sh + ownership_d +
n_members + edu_head_2 + age_head + sex_head | country
# Logistic regression
fs <- feglm(ac_formula, family = binomial(link = "logit"), data = global, weights = ~weight, cluster = c("adm1")); summary(fs)
# Save data set for which there are obs both in first and second stage
sec <- global[obs(fs),] # 52k observations lost
# Predicted probabilities
sec$phat0_obs <- as.numeric(predict(fs, type="response"))
# Find old HHs classified as owning an AC (NB: using ROC curve we have seen that we are GOOD at predicting those who have AC)
sec$ac_obs <- ifelse(sec$phat0_obs>0.5 & !is.na(sec$phat0_obs), 1 , 0)
# Selection term
sec$xb_noac = 1-sec$phat0_obs
sec$selection = ifelse(sec$ac==1,
(sec$xb_noac*log(sec$xb_noac)/sec$phat0_obs) + log(sec$phat0_obs),
(sec$phat0_obs*log(sec$phat0_obs)/sec$xb_noac) + log(sec$xb_noac))
# Linear Interaction
sec$selection_int <- sec$curr_CDD18_db*sec$selection
sec$selection_intsq <- sec$selection*sec$curr_CDD18_db*sec$curr_CDD18_db
# Formula electricity expenditure for electricity expenditure
ely_formula  <- ln_ely_q ~ ac +
curr_CDD18_db + I(curr_CDD18_db^2) + curr_HDD18_db + I(curr_HDD18_db^2) + ln_total_exp_usd_2011 + ln_ely_p +
urban_sh + ownership_d + n_members + edu_head_2 + age_head + sex_head + selection + selection_int + selection_intsq | country
# With selection
model0_ctintsq <- feols(ely_formula, data = sec, weights = ~weight, cluster = c("adm1")); summary(model0_ctintsq)
# Formula electricity expenditure for electricity expenditure
ely_formula  <- ln_ely_q ~ ac + ac*curr_CDD18_db + ac*I(curr_CDD18_db^2) +
curr_CDD18_db + I(curr_CDD18_db^2) + curr_HDD18_db + I(curr_HDD18_db^2) + ln_total_exp_usd_2011 + ln_ely_p +
urban_sh + ownership_d + n_members + edu_head_2 + age_head + sex_head + selection + selection_int + selection_intsq | country
# With selection
model_ctintsq <- feols(ely_formula, data = sec, weights = ~weight, cluster = c("adm1")); summary(model_ctintsq)
#################################
#  (9) Electricity in Levels  #
################################
# AC formula for global
ac_formula <- as.numeric(as.character(ac)) ~ mean_CDD18_db + mean_CDD18_db2 +
mean_CDD18_db_exp + mean_CDD18_db2_exp + ln_total_exp_usd_2011 + curr_CDD18_db + curr_CDD18_db2 +
ln_ely_p + ln_ely_p_cdd + ln_ely_p_cdd2 + ln_ely_p_nme + ln_ely_p_own +
urban_sh + ownership_d +
n_members + edu_head_2 + age_head + sex_head | country
# Logistic regression
fs <- feglm(ac_formula, family = binomial(link = "logit"), data = global, weights = ~weight, cluster = c("adm1")); summary(fs)
# Save data set for which there are obs both in first and second stage
sec <- global[obs(fs),] # 52k observations lost
# Predicted probabilities
sec$phat0_obs <- as.numeric(predict(fs, type="response"))
# Find old HHs classified as owning an AC (NB: using ROC curve we have seen that we are GOOD at predicting those who have AC)
sec$ac_obs <- ifelse(sec$phat0_obs>0.5 & !is.na(sec$phat0_obs), 1 , 0)
# Selection term
sec$xb_noac = 1-sec$phat0_obs
sec$selection = ifelse(sec$ac==1,
(sec$xb_noac*log(sec$xb_noac)/sec$phat0_obs) + log(sec$phat0_obs),
(sec$phat0_obs*log(sec$phat0_obs)/sec$xb_noac) + log(sec$xb_noac))
# Electricity in levels
sec <- sec %>% mutate(ely_q = exp(ln_ely_q))
# Formula electricity expenditure for electricity expenditure
ely_formula  <- ely_q ~ ac +
curr_CDD18_db + I(curr_CDD18_db^2) + curr_HDD18_db + I(curr_HDD18_db^2) + ln_total_exp_usd_2011 + ln_ely_p +
urban_sh + ownership_d + n_members + edu_head_2 + age_head + sex_head + selection | country
# With selection
model0_lev <- feols(ely_formula, data = sec, weights = ~weight, cluster = c("adm1")); summary(model0_lev)
# Formula electricity expenditure for electricity expenditure
ely_formula  <- ely_q ~ ac + ac*curr_CDD18_db + ac*I(curr_CDD18_db^2) +
curr_CDD18_db + I(curr_CDD18_db^2) + curr_HDD18_db + I(curr_HDD18_db^2) + ln_total_exp_usd_2011 + ln_ely_p +
urban_sh + ownership_d + n_members + edu_head_2 + age_head + sex_head + selection | country
# With selection
model_lev <- feols(ely_formula, data = sec, weights = ~weight, cluster = c("adm1")); summary(model_lev)
#################################
#  (6) Unweighted regressions   #
#################################
# Re-run data set
global_unw <- global
# AC formula for global
ac_formula <- as.numeric(as.character(ac)) ~ mean_CDD18_db + mean_CDD18_db2 +
mean_CDD18_db_exp + mean_CDD18_db2_exp + ln_total_exp_usd_2011 + curr_CDD18_db + curr_CDD18_db2 +
ln_ely_p + ln_ely_p_cdd + ln_ely_p_cdd2 + ln_ely_p_nme + ln_ely_p_own +
urban_sh + ownership_d +
n_members + edu_head_2 + age_head + sex_head | country
# Logistic regression of AC on covariates
fs <- feglm(ac_formula, family = binomial(link = "logit"),
data = global_unw, cluster = c("adm1")); summary(fs)
# Predicted probabilities
global_unw$phat0_obs <- as.numeric(predict(fs, type="response"))
# Find old HHs classified as owning an AC (NB: using ROC curve we have seen that we are GOOD at predicting those who have AC)
global_unw$ac_obs <- ifelse(global_unw$phat0_obs>0.5 & !is.na(global_unw$phat0_obs), 1 , 0)
# Selection term
global_unw$xb_noac = 1-global_unw$phat0_obs
global_unw$selection = ifelse(global_unw$ac==1,
(global_unw$xb_noac*log(global_unw$xb_noac)/global_unw$phat0_obs) + log(global_unw$phat0_obs),
(global_unw$phat0_obs*log(global_unw$phat0_obs)/global_unw$xb_noac) + log(global_unw$xb_noac))
# Formula electricity expenditure for electricity expenditure
ely_formula  <- ln_ely_q ~ ac +
curr_CDD18_db + I(curr_CDD18_db^2) + curr_HDD18_db + I(curr_HDD18_db^2) + ln_total_exp_usd_2011 + ln_ely_p +
urban_sh + ownership_d + n_members + edu_head_2 + age_head + sex_head + selection | country
# With selection
model0_unw <- feols(ely_formula, data = global, cluster = c("adm1")); summary(model0_unw)
# Formula electricity expenditure for electricity expenditure
ely_formula  <- ln_ely_q ~ ac + ac*curr_CDD18_db + ac*I(curr_CDD18_db^2) +
curr_CDD18_db + I(curr_CDD18_db^2) + curr_HDD18_db + I(curr_HDD18_db^2) + ln_total_exp_usd_2011 + ln_ely_p +
urban_sh + ownership_d + n_members + edu_head_2 + age_head + sex_head + selection | country
# With selection
model_unw <- feols(ely_formula, data = global, cluster = c("adm1")); summary(model_unw)
## Export
# Compare the models
screenreg(list(model0_sfe, model_sfe, model0_afe, model_afe, model0_24, model_24, model0_np, model_np,
model0_dec, model_dec), digits = 3,
caption = "Robustness Checks",
stars = c(0.1, 0.05, 0.01),
custom.model.names = c("Subnational FE", "Subnational FE", "ADM1 FE", "ADM1 FE",
"CDD 24 - HDD 15", "CDD 24 - HDD 15", "No Elec. Price", "No Elec. Price",
"Price Interactions", "Price Interactions"),
custom.coef.map = list("ac1"= "AC", "ac1:curr_CDD18_db" = "AC $\\times$ CDD",
"ac1:I(curr_CDD18_db^2)" = "AC $\\times$ CDD$^2$"),
custom.gof.rows = list("Correction Term" = c("YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES"),
"Country FE" = c("NO", "NO", "NO", "NO", "YES", "YES", "YES", "YES", "YES", "YES"),
"Subnational FE" = c("YES", "YES", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO"),
"ADM-1 FE" = c("NO", "NO", "YES", "YES", "NO", "NO", "NO", "NO", "NO", "NO"),
"Countries" = c("25", "25", "25", "25", "25", "25", "25", "25", "25", "25")))
screenreg(list(model0_ct2, model_ct2, model0_ctint, model_ctint, model0_ctint, model_ctint, model0_lev, model_lev,
model0_unw, model_unw), digits = 3,
caption = "Robustness Checks",
stars = c(0.1, 0.05, 0.01),
custom.model.names = c("Squared CT", "Squared CT", "Linear Interaction CT", "Linear Interaction CT",
"Squared Interaction CT", "Squared Interaction CT", "Level", "Level",
"Unweighted", "Unweighted"),
custom.coef.map = list("ac1"= "AC", "ac1:curr_CDD18_db" = "AC $\\times$ CDD",
"ac1:I(curr_CDD18_db^2)" = "AC $\\times$ CDD$^2$"),
custom.gof.rows = list("Correction Term" = c("YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES"),
"Country FE" = c("NO", "NO", "NO", "NO", "YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES"),
"Correction Term$^2$" = c("YES", "YES", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO"),
"Correction Term $\\times$ CDD" = c("YES", "YES", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO"),
"Correction Term $\\times$ f(CDD)" = c("YES", "YES", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO"),
"Countries" = c("25", "25", "25", "25", "25", "25", "25", "25", "25", "25", "25", "25")))
screenreg(list(model0_ct2, model_ct2, model0_ctint, model_ctint, model0_ctint, model_ctint, model0_lev, model_lev,
model0_unw, model_unw), digits = 3,
caption = "Robustness Checks",
stars = c(0.1, 0.05, 0.01),
custom.model.names = c("Squared CT", "Squared CT", "Linear Interaction CT", "Linear Interaction CT",
"Squared Interaction CT", "Squared Interaction CT", "Level", "Level",
"Unweighted", "Unweighted"),
custom.coef.map = list("ac1"= "AC", "ac1:curr_CDD18_db" = "AC $\\times$ CDD",
"ac1:I(curr_CDD18_db^2)" = "AC $\\times$ CDD$^2$"),
custom.gof.rows = list("Correction Term" = c("YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES"),
"Country FE" = c("YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES"),
"Correction Term$^2$" = c("YES", "YES", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO"),
"Correction Term $\\times$ CDD" = c("NO", "NO", "YES", "YES", "NO", "NO", "NO", "NO", "NO", "NO"),
"Correction Term $\\times$ f(CDD)" = c("NO", "NO", "NO", "NO", "YES", "YES", "NO", "NO", "NO", "NO"),
"Countries" = c("25", "25", "25", "25", "25", "25", "25", "25", "25", "25")))
screenreg(list(model0_ct2, model_ct2, model0_ctint, model_ctint, model0_ctint, model_ctint, model0_lev, model_lev,
model0_unw, model_unw), digits = 3,
caption = "Robustness Checks",
stars = c(0.1, 0.05, 0.01),
custom.model.names = c("Squared CT", "Squared CT", "Linear Interaction CT", "Linear Interaction CT",
"Squared Interaction CT", "Squared Interaction CT", "Level", "Level",
"Unweighted", "Unweighted"),
custom.coef.map = list("ac1"= "AC", "ac1:curr_CDD18_db" = "AC $\\times$ CDD",
"ac1:I(curr_CDD18_db^2)" = "AC $\\times$ CDD$^2$"),
custom.gof.rows = list("Correction Term" = c("YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES"),
"Country FE" = c("YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES"),
"Correction Term$^2$" = c("YES", "YES", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO"),
"Correction Term $\\times$ CDD" = c("NO", "NO", "YES", "YES", "NO", "NO", "NO", "NO", "NO", "NO"),
"Correction Term $\\times$ f(CDD)" = c("NO", "NO", "NO", "NO", "YES", "YES", "NO", "NO", "NO", "NO"),
"Countries" = c("25", "25", "25", "25", "25", "25", "25", "25", "25", "25")))
screenreg(list(model0_ct2, model_ct2, model0_ctint, model_ctint, model0_ctint, model_ctint, model0_lev, model_lev,
model0_unw, model_unw), digits = 3,
caption = "Robustness Checks",
stars = c(0.1, 0.05, 0.01),
custom.model.names = c("Squared CT", "Squared CT", "Linear Interaction CT", "Linear Interaction CT",
"Squared Interaction CT", "Squared Interaction CT", "Level", "Level",
"Unweighted", "Unweighted"),
custom.coef.map = list("ac1"= "AC", "ac1:curr_CDD18_db" = "AC $\\times$ CDD",
"ac1:I(curr_CDD18_db^2)" = "AC $\\times$ CDD$^2$"),
custom.gof.rows = list("Correction Term" = c("YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES"),
"Country FE" = c("YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES"),
"Correction Term$^2$" = c("YES", "YES", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO"),
"Correction Term $\\times$ CDD" = c("NO", "NO", "YES", "YES", "NO", "NO", "NO", "NO", "NO", "NO"),
"Correction Term $\\times$ f(CDD)" = c("NO", "NO", "NO", "NO", "YES", "YES", "NO", "NO", "NO", "NO"),
"Countries" = c("25", "25", "25", "25", "25", "25", "25", "25", "25", "25")))
# Export
texreg(list(model0_sfe, model_sfe, model0_afe, model_afe, model0_24, model_24, model0_np, model_np,
model0_dec, model_dec), digits = 3,
caption = "Robustness Checks",
stars = c(0.1, 0.05, 0.01),
custom.model.names = c("Subnational FE", "Subnational FE", "ADM1 FE", "ADM1 FE",
"CDD 24 - HDD 15", "CDD 24 - HDD 15", "No Elec. Price", "No Elec. Price",
"Price Interactions", "Price Interactions"),
custom.note = "'Subnational' means at the most disaggregated geographical information for each country.
(1)-(12) clustered standard errors at the ADM1 level in parentheses.
$^{***}p<0.01$; $^{**}p<0.05$; $^{*}p<0.1$. Regressions (1)-(20) are conducted using survey weights.",
file = paste(output,'electricity/robustness/Global_robustness_part1.tex', sep=''), append=F,  float.pos = "H",
label = "rob: ely_global",
custom.coef.map = list("ac1"= "AC", "ac1:curr_CDD18_db" = "AC $\\times$ CDD",
"ac1:I(curr_CDD18_db^2)" = "AC $\\times$ CDD$^2$"),
custom.gof.rows = list("Correction Term" = c("YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES"),
"Country FE" = c("NO", "NO", "NO", "NO", "YES", "YES", "YES", "YES", "YES", "YES"),
"Subnational FE" = c("YES", "YES", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO"),
"ADM-1 FE" = c("NO", "NO", "YES", "YES", "NO", "NO", "NO", "NO", "NO", "NO"),
"Countries" = c("25", "25", "25", "25", "25", "25", "25", "25", "25", "25")),
caption.above = TRUE)
texreg(list(model0_ct2, model_ct2, model0_ctint, model_ctint, model0_ctint, model_ctint, model0_lev, model_lev,
model0_unw, model_unw), digits = 3,
caption = "Robustness Checks",
stars = c(0.1, 0.05, 0.01),
custom.model.names = c("Squared CT", "Squared CT", "Linear Interaction CT", "Linear Interaction CT",
"Squared Interaction CT", "Squared Interaction CT", "Level", "Level",
"Unweighted", "Unweighted"),
custom.note = "'Subnational' means at the most disaggregated geographical information for each country.
(1)-(12) clustered standard errors at the ADM1 level in parentheses.
$^{***}p<0.01$; $^{**}p<0.05$; $^{*}p<0.1$. Regressions (1)-(20) are conducted using survey weights.",
file = paste(output,'electricity/robustness/Global_robustness_part2.tex', sep=''), append=F,  float.pos = "H", label = "rob: ely_global",
custom.coef.map = list("ac1"= "AC", "ac1:curr_CDD18_db" = "AC $\\times$ CDD",
"ac1:I(curr_CDD18_db^2)" = "AC $\\times$ CDD$^2$"),
custom.gof.rows = list("Correction Term" = c("YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES"),
"Country FE" = c("YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES"),
"Correction Term$^2$" = c("YES", "YES", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO"),
"Correction Term $\\times$ CDD" = c("NO", "NO", "YES", "YES", "NO", "NO", "NO", "NO", "NO", "NO"),
"Correction Term $\\times$ f(CDD)" = c("NO", "NO", "NO", "NO", "YES", "YES", "NO", "NO", "NO", "NO"),
"Countries" = c("25", "25", "25", "25", "25", "25", "25", "25", "25", "25")),
caption.above = TRUE)
