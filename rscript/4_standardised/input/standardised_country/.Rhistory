# Only who has electricity access
HH_India <- HH_India %>% filter(ely_access == 1)
# Add urbanisation share
source(paste0(stub, "6-Projections/rscripts/process_raw_data/add_urban/add_urban_ind.R"))
# Only those with not missing values
HH_India <- HH_India[complete.cases(HH_India$ac), ]
HH_India <- HH_India[complete.cases(HH_India$mean_CDD_db), ]
HH_India <- HH_India[complete.cases(HH_India$mean_HDD_db), ]
HH_India <- HH_India[complete.cases(HH_India$curr_CDD_db), ]
HH_India <- HH_India[complete.cases(HH_India$curr_HDD_db), ]
HH_India <- HH_India[complete.cases(HH_India$ln_total_exp_usd_2011), ]
HH_India <- HH_India[complete.cases(HH_India$urban_sh), ]
HH_India <- HH_India[complete.cases(HH_India$n_members), ]
HH_India <- HH_India[complete.cases(HH_India$sh_under16), ]
HH_India <- HH_India[complete.cases(HH_India$ownership_d), ]
HH_India <- HH_India[complete.cases(HH_India$edu_head_2), ]
HH_India <- HH_India[complete.cases(HH_India$occupation_head), ]
HH_India <- HH_India[complete.cases(HH_India$age_head), ]
HH_India <- HH_India[complete.cases(HH_India$sex_head), ]
# Check
HH_India <- HH_India[(is.finite(HH_India$ln_ely_q) & !is.na(HH_India$ln_ely_q)),]
# CDD in 100s
HH_India <- HH_India %>% mutate(mean_CDD_db = mean_CDD_db/100,
mean_HDD_db = mean_HDD_db/100,
curr_CDD_db = curr_CDD_db/100,
curr_HDD_db = curr_HDD_db/100)
# Filter variables and rows
HH_India <- dplyr::select(HH_India, ln_ely_q, ely_q, ac, curr_CDD_db, ln_total_exp_usd_2011, curr_HDD_db, ln_total_exp_usd_2011,
urban_sh, n_members, sh_under16, ownership_d, edu_head_2,
age_head , sex_head, state, mean_CDD_db, mean_HDD_db,
state_district, state3, weight)
# Scale variable
HH_India <- HH_India %>% mutate(std_CDD_mean = as.numeric(scale(mean_CDD_db)),
std_CDD = as.numeric(scale(curr_CDD_db)),
std_texp = as.numeric(scale(ln_total_exp_usd_2011)),
std_HDD = as.numeric(scale(curr_HDD_db)),
std_n_members = as.numeric(scale(n_members)),
std_age_head = as.numeric(scale(age_head)),
std_urban_sh = as.numeric(scale(urban_sh)))
# Survey - re-run to add new variable
HH_India_svy <- svydesign(data = HH_India, ids = ~1, weights = ~ weight)
##################################
#        Extensive margin        #
##################################
# AC formula for India
ac_formula_ind <- ac ~ mean_CDD_db + I(mean_CDD_db^2) + mean_CDD_db*ln_total_exp_usd_2011 + urban_sh +
n_members + ownership_d + edu_head_2 + age_head + sex_head + state
# Logistic regression of AC on covariates
reg_ac <- svyglm(ac_formula_ind, design = HH_India_svy,
family = binomial(logit), na.action=na.omit); summary(reg_ac)
# Save AME results
margins <- margins(reg_ac, design = HH_India_svy)
setwd("F:/.shortcut-targets-by-id/1JhN0qxmpnYQDoWQdBhnYKzbRCVGH_WXE/6-Projections/rscripts/dmcf/regressions/standardised/with_continuous_urbanisation")
## This R-script:
##      1) exploits CDD-dry bulb 24 deg and HDD-dry bulb 15 deg
##      2) conducts STANDARDISED logit regressions for India using 2012 wave
##      3) run intensive margin regressions: electricity expenditure on climate + covariates
##         using Dubin and McFadden (1984) approach
rm(list=ls(all=TRUE)) # Removes all previously created variables
gc()                  # frees up memory resources
# Load packages
library(data.table)
library(plyr)
library(dplyr)
library(FSA)
library(haven)
library(readstata13)
library(stringr)
library(tidyverse)
library(sandwich)
library(lmtest)
library(ResourceSelection)
library(multiwayvcov)
library(msm) # https://stats.oarc.ucla.edu/r/faq/how-can-i-estimate-the-standard-error-of-transformed-regression-parameters-in-r-using-the-delta-method/
library(margins)
library(texreg)
library(xtable)
library(survey)
# Set directory
user <- 'fp'
user <- 'gf'
if (user=='fp') {
stub <- 'G:/.shortcut-targets-by-id/1JhN0qxmpnYQDoWQdBhnYKzbRCVGH_WXE/'
}
if (user=='gf') {
stub <- 'F:/.shortcut-targets-by-id/1JhN0qxmpnYQDoWQdBhnYKzbRCVGH_WXE/'
}
house <- paste(stub,'6-Projections/data/household/Fourcountries', sep='')
output <- paste(stub,'6-Projections/results/regressions/', sep='')
script <- paste(stub,'6-Projections/rscripts/dmcf/regressions/standardised/with_continuous_urbanisation/', sep='')
# Load Household data
HH_India <- readRDS(paste(house,'/ind_nss.rds', sep=''))
HH_India <- HH_India %>% filter(occupation_head != 1)
# Arrange some vars
HH_India$ac <- as.factor(HH_India$ac)
HH_India$ownership <- as.factor(HH_India$ownership)
HH_India$edu_head_2 <- as.factor(HH_India$edu_head_2)
HH_India$sex_head <- as.factor(HH_India$sex_head)
HH_India$occupation_head <- as.factor(HH_India$occupation_head)
# log total exp
HH_India$ln_total_exp_usd_2011 <- log(HH_India$total_exp_usd_2011)
HH_India$ln_total_exp_usd_2011[HH_India$total_exp_usd_2011 == 0] <- NA
# Log electricity quantity
HH_India$ln_ely_q <- log(HH_India$ely_q)
# Only who has electricity access
HH_India <- HH_India %>% filter(ely_access == 1)
# Add urbanisation share
source(paste0(stub, "6-Projections/rscripts/process_raw_data/add_urban/add_urban_ind.R"))
# Only those with not missing values
HH_India <- HH_India[complete.cases(HH_India$ac), ]
HH_India <- HH_India[complete.cases(HH_India$mean_CDD_db), ]
HH_India <- HH_India[complete.cases(HH_India$mean_HDD_db), ]
HH_India <- HH_India[complete.cases(HH_India$curr_CDD_db), ]
HH_India <- HH_India[complete.cases(HH_India$curr_HDD_db), ]
HH_India <- HH_India[complete.cases(HH_India$ln_total_exp_usd_2011), ]
HH_India <- HH_India[complete.cases(HH_India$urban_sh), ]
HH_India <- HH_India[complete.cases(HH_India$n_members), ]
HH_India <- HH_India[complete.cases(HH_India$sh_under16), ]
HH_India <- HH_India[complete.cases(HH_India$ownership_d), ]
HH_India <- HH_India[complete.cases(HH_India$edu_head_2), ]
HH_India <- HH_India[complete.cases(HH_India$occupation_head), ]
HH_India <- HH_India[complete.cases(HH_India$age_head), ]
HH_India <- HH_India[complete.cases(HH_India$sex_head), ]
# Check
HH_India <- HH_India[(is.finite(HH_India$ln_ely_q) & !is.na(HH_India$ln_ely_q)),]
# CDD in 100s
HH_India <- HH_India %>% mutate(mean_CDD_db = mean_CDD_db/100,
mean_HDD_db = mean_HDD_db/100,
curr_CDD_db = curr_CDD_db/100,
curr_HDD_db = curr_HDD_db/100)
# Filter variables and rows
HH_India <- dplyr::select(HH_India, ln_ely_q, ely_q, ac, curr_CDD_db, ln_total_exp_usd_2011, curr_HDD_db, ln_total_exp_usd_2011,
urban_sh, n_members, sh_under16, ownership_d, edu_head_2,
age_head , sex_head, state, mean_CDD_db, mean_HDD_db,
state_district, state3, weight)
# Scale variable
HH_India <- HH_India %>% mutate(std_CDD_mean = as.numeric(scale(mean_CDD_db)),
std_CDD = as.numeric(scale(curr_CDD_db)),
std_texp = as.numeric(scale(ln_total_exp_usd_2011)),
std_HDD = as.numeric(scale(curr_HDD_db)),
std_n_members = as.numeric(scale(n_members)),
std_age_head = as.numeric(scale(age_head)),
std_urban_sh = as.numeric(scale(urban_sh)))
# Survey - re-run to add new variable
HH_India_svy <- svydesign(data = HH_India, ids = ~1, weights = ~ weight)
##################################
#        Extensive margin        #
##################################
# AC formula for India
ac_formula_ind <- ac ~ mean_CDD_db + I(mean_CDD_db^2) + mean_CDD_db*std_texp + std_urban_sh +
std_n_members + ownership_d + edu_head_2 + std_age_head + sex_head +
state
# Logistic regression of AC on covariates
reg_ac <- svyglm(ac_formula_ind, design = HH_India_svy,
family = binomial(logit), na.action=na.omit); summary(reg_ac)
# Save AME results
margins <- margins(reg_ac, design = HH_India_svy)
ac_margins <- summary(margins)
# Predicted probabilities
HH_India$phat0_obs <- as.numeric(predict(reg_ac, type="response"))
mean(as.numeric(HH_India$ac))-1
summary(HH_India$phat0_obs)
# Find old HHs classified as owning an AC (NB: using ROC curve we have seen that we are GOOD at predicting those who have AC)
HH_India$ac_obs <- ifelse(HH_India$phat0_obs>0.5 & !is.na(HH_India$phat0_obs), 1 , 0)
# Selection term
HH_India$xb_noac = 1-HH_India$phat0_obs
HH_India$selection = ifelse(HH_India$ac==1,
(HH_India$xb_noac*log(HH_India$xb_noac)/HH_India$phat0_obs) + log(HH_India$phat0_obs),
(HH_India$phat0_obs*log(HH_India$phat0_obs)/HH_India$xb_noac) + log(HH_India$xb_noac))
# Survey - re-run to add new variable
HH_India_svy <- svydesign(data = HH_India, ids = ~1, weights = ~ weight)
#################################################################
#     Intensive margin + the role of AC
#     1) We interact AC with a set of variables to understand
#     how AC affects the adoption based on different charact.
#     2) We compute coefficients not only at the averages, but
#     also based on specific values of our variables.
#     For instance, we compute the coefficients by decile, and
#     not only for the average household
#     Somehow point 1) is similar to a CDA, but without the
#     other appliances. For simplicity, I am going to interact
#     AC only with climate
#################################################################
# Formula electricity expenditure with interactions
ely_formula_ind <- ln_ely_q ~ ac + ac*std_CDD + ac*I(std_CDD^2) +
std_CDD + I(std_CDD^2) + std_CDD*std_texp +
std_HDD + I(std_HDD^2) + std_HDD*std_texp +
std_urban_sh + ownership_d + std_n_members + edu_head_2 + std_age_head + sex_head + state + selection
# With selection
model <- svyglm(ely_formula_ind, design = HH_India_svy, na.action=na.omit); summary(model)
# Marginal effect of AC
ely_margins <- summary(margins(model, design = HH_India_svy))
## This R-script:
##      1) exploits CDD-dry bulb 24 deg and HDD-dry bulb 15 deg
##      2) conducts STANDARDISED logit regressions for India using 2012 wave
##      3) run intensive margin regressions: electricity expenditure on climate + covariates
##         using Dubin and McFadden (1984) approach
rm(list=ls(all=TRUE)) # Removes all previously created variables
gc()                  # frees up memory resources
# Load packages
library(data.table)
library(plyr)
library(dplyr)
library(FSA)
library(haven)
library(readstata13)
library(stringr)
library(tidyverse)
library(sandwich)
library(lmtest)
library(ResourceSelection)
library(multiwayvcov)
library(msm) # https://stats.oarc.ucla.edu/r/faq/how-can-i-estimate-the-standard-error-of-transformed-regression-parameters-in-r-using-the-delta-method/
library(margins)
library(texreg)
library(xtable)
library(survey)
# Set directory
user <- 'fp'
user <- 'gf'
if (user=='fp') {
stub <- 'G:/.shortcut-targets-by-id/1JhN0qxmpnYQDoWQdBhnYKzbRCVGH_WXE/'
}
if (user=='gf') {
stub <- 'F:/.shortcut-targets-by-id/1JhN0qxmpnYQDoWQdBhnYKzbRCVGH_WXE/'
}
house <- paste(stub,'6-Projections/data/household/Fourcountries', sep='')
output <- paste(stub,'6-Projections/results/regressions/', sep='')
script <- paste(stub,'6-Projections/rscripts/dmcf/regressions/standardised/with_continuous_urbanisation/', sep='')
# Load Household data
HH_India <- readRDS(paste(house,'/ind_nss.rds', sep=''))
HH_India <- HH_India %>% filter(occupation_head != 1)
# Arrange some vars
HH_India$ac <- as.factor(HH_India$ac)
HH_India$ownership <- as.factor(HH_India$ownership)
HH_India$edu_head_2 <- as.factor(HH_India$edu_head_2)
HH_India$sex_head <- as.factor(HH_India$sex_head)
HH_India$occupation_head <- as.factor(HH_India$occupation_head)
# log total exp
HH_India$ln_total_exp_usd_2011 <- log(HH_India$total_exp_usd_2011)
HH_India$ln_total_exp_usd_2011[HH_India$total_exp_usd_2011 == 0] <- NA
# Log electricity quantity
HH_India$ln_ely_q <- log(HH_India$ely_q)
# Only who has electricity access
HH_India <- HH_India %>% filter(ely_access == 1)
# Add urbanisation share
source(paste0(stub, "6-Projections/rscripts/process_raw_data/add_urban/add_urban_ind.R"))
# Only those with not missing values
HH_India <- HH_India[complete.cases(HH_India$ac), ]
HH_India <- HH_India[complete.cases(HH_India$mean_CDD_db), ]
HH_India <- HH_India[complete.cases(HH_India$mean_HDD_db), ]
HH_India <- HH_India[complete.cases(HH_India$curr_CDD_db), ]
HH_India <- HH_India[complete.cases(HH_India$curr_HDD_db), ]
HH_India <- HH_India[complete.cases(HH_India$ln_total_exp_usd_2011), ]
HH_India <- HH_India[complete.cases(HH_India$urban_sh), ]
HH_India <- HH_India[complete.cases(HH_India$n_members), ]
HH_India <- HH_India[complete.cases(HH_India$sh_under16), ]
HH_India <- HH_India[complete.cases(HH_India$ownership_d), ]
HH_India <- HH_India[complete.cases(HH_India$edu_head_2), ]
HH_India <- HH_India[complete.cases(HH_India$occupation_head), ]
HH_India <- HH_India[complete.cases(HH_India$age_head), ]
HH_India <- HH_India[complete.cases(HH_India$sex_head), ]
# Check
HH_India <- HH_India[(is.finite(HH_India$ln_ely_q) & !is.na(HH_India$ln_ely_q)),]
# CDD in 100s
HH_India <- HH_India %>% mutate(mean_CDD_db = mean_CDD_db/100,
mean_HDD_db = mean_HDD_db/100,
curr_CDD_db = curr_CDD_db/100,
curr_HDD_db = curr_HDD_db/100)
# Filter variables and rows
HH_India <- dplyr::select(HH_India, ln_ely_q, ely_q, ac, curr_CDD_db, ln_total_exp_usd_2011, curr_HDD_db, ln_total_exp_usd_2011,
urban_sh, n_members, sh_under16, ownership_d, edu_head_2,
age_head , sex_head, state, mean_CDD_db, mean_HDD_db,
state_district, state3, weight)
# Scale variable
HH_India <- HH_India %>% mutate(std_CDD_mean = as.numeric(scale(mean_CDD_db)),
std_CDD = as.numeric(scale(curr_CDD_db)),
std_texp = as.numeric(scale(ln_total_exp_usd_2011)),
std_HDD = as.numeric(scale(curr_HDD_db)),
std_n_members = as.numeric(scale(n_members)),
std_age_head = as.numeric(scale(age_head)),
std_urban_sh = as.numeric(scale(urban_sh)))
# Survey - re-run to add new variable
HH_India_svy <- svydesign(data = HH_India, ids = ~1, weights = ~ weight)
##################################
#        Extensive margin        #
##################################
# AC formula for India
ac_formula_ind <- ac ~ std_CDD_mean + I(std_CDD_mean^2) + std_CDD_mean*std_texp + std_urban_sh +
std_n_members + ownership_d + edu_head_2 + std_age_head + sex_head +
state
# Logistic regression of AC on covariates
reg_ac <- svyglm(ac_formula_ind, design = HH_India_svy,
family = binomial(logit), na.action=na.omit); summary(reg_ac)
# Save AME results
margins <- margins(reg_ac, design = HH_India_svy)
ac_margins <- summary(margins)
# Predicted probabilities
HH_India$phat0_obs <- as.numeric(predict(reg_ac, type="response"))
mean(as.numeric(HH_India$ac))-1
summary(HH_India$phat0_obs)
# Find old HHs classified as owning an AC (NB: using ROC curve we have seen that we are GOOD at predicting those who have AC)
HH_India$ac_obs <- ifelse(HH_India$phat0_obs>0.5 & !is.na(HH_India$phat0_obs), 1 , 0)
# Selection term
HH_India$xb_noac = 1-HH_India$phat0_obs
HH_India$selection = ifelse(HH_India$ac==1,
(HH_India$xb_noac*log(HH_India$xb_noac)/HH_India$phat0_obs) + log(HH_India$phat0_obs),
(HH_India$phat0_obs*log(HH_India$phat0_obs)/HH_India$xb_noac) + log(HH_India$xb_noac))
# Survey - re-run to add new variable
HH_India_svy <- svydesign(data = HH_India, ids = ~1, weights = ~ weight)
#################################################################
#     Intensive margin + the role of AC
#     1) We interact AC with a set of variables to understand
#     how AC affects the adoption based on different charact.
#     2) We compute coefficients not only at the averages, but
#     also based on specific values of our variables.
#     For instance, we compute the coefficients by decile, and
#     not only for the average household
#     Somehow point 1) is similar to a CDA, but without the
#     other appliances. For simplicity, I am going to interact
#     AC only with climate
#################################################################
# Formula electricity expenditure with interactions
ely_formula_ind <- ln_ely_q ~ ac + ac*std_CDD + ac*I(std_CDD^2) +
std_CDD + I(std_CDD^2) + std_CDD*std_texp +
std_HDD + I(std_HDD^2) + std_HDD*std_texp +
std_urban_sh + ownership_d + std_n_members + edu_head_2 + std_age_head + sex_head + state + selection
# With selection
model <- svyglm(ely_formula_ind, design = HH_India_svy, na.action=na.omit); summary(model)
# Marginal effect of AC
ely_margins <- summary(margins(model, design = HH_India_svy))
# Export
save(list = c("ely_margins", "ac_margins"), file = paste(output,'/for_graphs/standardised/ind_dmcf.RData', sep=''))
## This R-script:
##      1) exploits CDD-dry bulb 24 deg and HDD-dry bulb 15 deg
##      2) conducts STANDARDISED logit regressions for Indonesia using 2016 wave
##      3) run intensive margin regressions: electricity expenditure on climate + covariates
##         using Dubin and McFadden (1984) approach
rm(list=ls(all=TRUE)) # Removes all previously created variables
gc()                  # frees up memory resources
# Load packages
library(data.table)
library(plyr)
library(dplyr)
library(FSA)
library(haven)
library(readstata13)
library(stringr)
library(tidyverse)
library(sandwich)
library(lmtest)
library(ResourceSelection)
library(multiwayvcov)
library(msm) # https://stats.oarc.ucla.edu/r/faq/how-can-i-estimate-the-standard-error-of-transformed-regression-parameters-in-r-using-the-delta-method/
library(margins)
library(texreg)
library(xtable)
library(stargazer)
# Set directory
user <- 'fp'
#user <- 'gf'
if (user=='fp') {
stub <- 'G:/.shortcut-targets-by-id/1JhN0qxmpnYQDoWQdBhnYKzbRCVGH_WXE/'
}
if (user=='gf') {
stub <- 'H:/.shortcut-targets-by-id/1JhN0qxmpnYQDoWQdBhnYKzbRCVGH_WXE/'
}
house <- paste(stub,'6-Projections/data/household/Fourcountries', sep='')
output <- paste(stub,'6-Projections/results/regressions/', sep='')
script <- paste(stub,'6-Projections/rscripts/dmcf/regressions/standardised/with_continuous_urbanisation/', sep='')
# Load Household data
HH_Indonesia <- readRDS(paste(house,'/idn_susenas.rds', sep=''))
## This R-script:
##      1) exploits CDD-dry bulb 24 deg and HDD-dry bulb 15 deg
##      2) conducts STANDARDISED logit regressions for Indonesia using 2016 wave
##      3) run intensive margin regressions: electricity expenditure on climate + covariates
##         using Dubin and McFadden (1984) approach
rm(list=ls(all=TRUE)) # Removes all previously created variables
gc()                  # frees up memory resources
# Load packages
library(data.table)
library(plyr)
library(dplyr)
library(FSA)
library(haven)
library(readstata13)
library(stringr)
library(tidyverse)
library(sandwich)
library(lmtest)
library(ResourceSelection)
library(multiwayvcov)
library(msm) # https://stats.oarc.ucla.edu/r/faq/how-can-i-estimate-the-standard-error-of-transformed-regression-parameters-in-r-using-the-delta-method/
library(margins)
library(texreg)
library(xtable)
library(stargazer)
# Set directory
user <- 'fp'
user <- 'gf'
if (user=='fp') {
stub <- 'G:/.shortcut-targets-by-id/1JhN0qxmpnYQDoWQdBhnYKzbRCVGH_WXE/'
}
if (user=='gf') {
stub <- 'F:/.shortcut-targets-by-id/1JhN0qxmpnYQDoWQdBhnYKzbRCVGH_WXE/'
}
house <- paste(stub,'6-Projections/data/household/Fourcountries', sep='')
output <- paste(stub,'6-Projections/results/regressions/', sep='')
script <- paste(stub,'6-Projections/rscripts/dmcf/regressions/standardised/with_continuous_urbanisation/', sep='')
# Load Household data
HH_Indonesia <- readRDS(paste(house,'/idn_susenas.rds', sep=''))
# log total exp
HH_Indonesia$ln_total_exp_usd_2011 <- log(HH_Indonesia$total_exp_usd_2011)
HH_Indonesia$ln_total_exp_usd_2011[HH_Indonesia$total_exp_usd_2011 == 0] <- NA
# Log electricity quantity
HH_Indonesia$ln_ely_q <- log(HH_Indonesia$ely_q)
# Add urbanisation share
source(paste0(stub, "6-Projections/rscripts/process_raw_data/add_urban/add_urban_idn.R"))
# Only those with not missing values
HH_Indonesia <- HH_Indonesia[complete.cases(HH_Indonesia$ac), ]
HH_Indonesia <- HH_Indonesia[complete.cases(HH_Indonesia$mean_CDD_db), ]
HH_Indonesia <- HH_Indonesia[complete.cases(HH_Indonesia$mean_HDD_db), ]
HH_Indonesia <- HH_Indonesia[complete.cases(HH_Indonesia$curr_CDD_db), ]
HH_Indonesia <- HH_Indonesia[complete.cases(HH_Indonesia$curr_HDD_db), ]
HH_Indonesia <- HH_Indonesia[complete.cases(HH_Indonesia$ln_total_exp_usd_2011), ]
HH_Indonesia <- HH_Indonesia[complete.cases(HH_Indonesia$urban_sh), ]
HH_Indonesia <- HH_Indonesia[complete.cases(HH_Indonesia$n_members), ]
HH_Indonesia <- HH_Indonesia[complete.cases(HH_Indonesia$sh_under16), ]
HH_Indonesia <- HH_Indonesia[complete.cases(HH_Indonesia$housing_index_lab), ]
HH_Indonesia <- HH_Indonesia[complete.cases(HH_Indonesia$ownership_d), ]
HH_Indonesia <- HH_Indonesia[complete.cases(HH_Indonesia$edu_head_2), ]
HH_Indonesia <- HH_Indonesia[complete.cases(HH_Indonesia$occupation_head), ]
HH_Indonesia <- HH_Indonesia[complete.cases(HH_Indonesia$age_head), ]
HH_Indonesia <- HH_Indonesia[complete.cases(HH_Indonesia$sex_head), ]
# Arrange some vars
HH_Indonesia$state <- as.factor(HH_Indonesia$state)
HH_Indonesia$ac <- as.factor(HH_Indonesia$ac)
HH_Indonesia$refrigerator <- as.factor(HH_Indonesia$refrigerator)
HH_Indonesia$ownership <- as.factor(HH_Indonesia$ownership)
HH_Indonesia$edu_head_2 <- as.factor(HH_Indonesia$edu_head_2)
HH_Indonesia$sex_head <- as.factor(HH_Indonesia$sex_head)
HH_Indonesia$housing_index_lab <- as.factor(HH_Indonesia$housing_index_lab)
HH_Indonesia$occupation_head <- as.factor(HH_Indonesia$occupation_head)
# Only who has electricity access
HH_Indonesia <- HH_Indonesia %>% filter(ely_access == 1)
# CDD in 100s
HH_Indonesia <- HH_Indonesia %>% mutate(mean_CDD_db = mean_CDD_db/100)
HH_Indonesia <- HH_Indonesia %>% mutate(curr_CDD_db = curr_CDD_db/100)
HH_Indonesia <- HH_Indonesia %>% mutate(mean_HDD_db = mean_HDD_db/100)
HH_Indonesia <- HH_Indonesia %>% mutate(curr_HDD_db = curr_HDD_db/100)
# Check
HH_Indonesia <- HH_Indonesia[(is.finite(HH_Indonesia$ln_ely_q) & !is.na(HH_Indonesia$ln_ely_q)),]
# Filter variables and rows
HH_Indonesia <- dplyr::select(HH_Indonesia, ln_ely_q, ely_q, ac, curr_CDD_db, ln_total_exp_usd_2011, curr_HDD_db, ln_total_exp_usd_2011,
urban_sh, n_members, sh_under16, ownership_d, edu_head_2,
housing_index_lab, housing_index, age_head , sex_head, state, mean_CDD_db, mean_HDD_db,
state_district, state3, weight)
# Scale variable
HH_Indonesia <- HH_Indonesia %>% mutate(std_CDD_mean = as.numeric(scale(mean_CDD_db)),
std_CDD = as.numeric(scale(curr_CDD_db)),
std_texp = as.numeric(scale(ln_total_exp_usd_2011)),
std_HDD = as.numeric(scale(curr_HDD_db)),
std_n_members = as.numeric(scale(n_members)),
std_age_head = as.numeric(scale(age_head)),
std_urban_sh = as.numeric(scale(urban_sh)))
# Survey
HH_Indonesia_svy <- svydesign(data = HH_Indonesia, ids = ~1, weights = ~ weight)
##################################
#        Extensive margin        #
##################################
# AC formula for Indonesia
ac_formula_idn <- ac ~ std_CDD_mean + I(std_CDD_mean^2) + std_CDD_mean*std_texp + std_urban_sh +
std_n_members + ownership_d + edu_head_2 + std_age_head + sex_head +
housing_index_lab + state
# Logistic regression of AC on covariates
reg_ac <- svyglm(ac_formula_idn, design = HH_Indonesia_svy,
family = binomial(logit), na.action=na.omit); summary(reg_ac)
# Save AME results
margins <- margins(reg_ac, design = HH_Indonesia_svy)
ac_margins <- summary(margins)
# Predicted probabilities
HH_Indonesia$phat0_obs <- as.numeric(predict(reg_ac, type="response"))
# Find old HHs classified as owning an AC (NB: using ROC curve we have seen that we are GOOD at predicting those who have AC)
HH_Indonesia$ac_obs <- ifelse(HH_Indonesia$phat0_obs>0.5 & !is.na(HH_Indonesia$phat0_obs), 1 , 0)
# Selection term
HH_Indonesia$xb_noac = 1-HH_Indonesia$phat0_obs
HH_Indonesia$selection = ifelse(HH_Indonesia$ac==1,
(HH_Indonesia$xb_noac*log(HH_Indonesia$xb_noac)/HH_Indonesia$phat0_obs) + log(HH_Indonesia$phat0_obs),
(HH_Indonesia$phat0_obs*log(HH_Indonesia$phat0_obs)/HH_Indonesia$xb_noac) + log(HH_Indonesia$xb_noac))
# Survey - re-run to add new variable
HH_Indonesia_svy <- svydesign(data = HH_Indonesia, ids = ~1, weights = ~ weight)
#################################################################
#     Intensive margin + the role of AC
#     1) We interact AC with a set of variables to understand
#     how AC affects the adoption based on different charact.
#     2) We compute coefficients not only at the averages, but
#     also based on specific values of our variables.
#     For instance, we compute the coefficients by decile, and
#     not only for the average household
#     Somehow point 1) is similar to a CDA, but without the
#     other appliances. For simplicity, I am going to interact
#     AC only with climate
#################################################################
# Formula electricity quantity with interactions
ely_formula_idn <- ln_ely_q ~ ac + ac*std_CDD + ac*I(std_CDD^2) +
std_CDD + I(std_CDD^2) + std_CDD*std_texp +
std_urban_sh + ownership_d + std_n_members + edu_head_2 +
std_age_head + sex_head + housing_index_lab + state + selection
# With selection
model <- svyglm(ely_formula_idn, design = HH_Indonesia_svy, na.action=na.omit); summary(model)
# Marginal effect of AC
ely_margins <- summary(margins(model, design = HH_Indonesia_svy))
